{"version":3,"sources":["AppContext.js","hooks/useContract.js","hooks/useRockPaperScissors.js","utils/shortenAddress.js","components/GameCard.js","pages/Home/index.js","connectors.js","components/ConnectButton.js","components/AlertErrorBar.js","hooks/useEth.js","components/BallanceCard.js","hooks/useGameToken.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["initialContext","ethBalance","setEthBalance","tokenBalance","setTokenBalance","appError","undefined","setAppError","gameId","setGameId","commitedMove","setCommitedMove","isRevealed","setIsRevealed","opponentAccount","setOpponentAccount","opponentCommited","setOpponentCommited","opponentRevealed","setOpponentRevealed","gameResult","setGameResult","appReducer","state","type","payload","txnStatus","AppContext","createContext","useAppContext","React","useContext","AppContextProvider","children","useReducer","store","dispatch","contextValue","balance","str","selectedMove","setSelectedMove","Provider","value","useContract","contractAddress","ABI","AddressZero","Error","useWeb3React","library","account","signerOrProvider","getSigner","connectUnchecked","useMemo","Contract","useRockPaperScissors","contract","chainId","RockPaperScissors","networks","address","abi","useRockPaperScissorsContract","registerNewGame","a","register","from","result","wait","receipt","newGameId","Number","events","args","commitMove","id","move","plainMove","web3","utils","randomHex","commit","BigNumber","soliditySha3","revealMove","reveal","setGameEventListener","on","eventPlayer","eventGameId","removeListeners","removeAllListeners","readGameState","gameIdConverted","games","game","console","log","JSON","stringify","finished","winner","ethers","constants","getOpponentMove","opponentMove","registered","encrMove","getPlayers","players","opponent","find","x","resetGameContext","shortenAddress","num","substring","length","useStyles","makeStyles","theme","root","minWidth","button","margin","spacing","GameCard","useState","setMove","classes","active","registerGame","Card","className","CardActionArea","CardContent","Typography","gutterBottom","variant","component","FormControl","FormLabel","RadioGroup","aria-label","name","onChange","event","target","FormControlLabel","disabled","control","Radio","label","CardActions","Button","color","onClick","Home","Fragment","CssBaseline","Container","maxWidth","style","backgroundColor","height","injected","InjectedConnector","supportedChainIds","maxHeight","ConnectButton","activate","deactivate","useEffect","window","ethereum","e","UnsupportedChainIdError","Alert","props","elevation","AlertErrorBar","handleClose","reason","Snackbar","open","autoHideDuration","onClose","severity","useEth","fetchEthBalance","getBalance","parseFloat","formatEther","toPrecision","TokenBalance","tokenContract","GameToken","fetchTokenBalance","balanceOf","formatUnits","useGameToken","BallanceCard","flexGrow","title","Header","AppBar","position","Toolbar","getLibrary","provider","providers","Web3Provider","App","path","Boolean","location","hostname","match","Client","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c50ec57e.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\nconst initialContext = {\n  ethBalance: '--',\n  setEthBalance: () => {},\n  tokenBalance: '--',\n  setTokenBalance: () => {},\n\n  appError: undefined,\n  setAppError: () => {},\n\n  gameId: undefined,\n  setGameId: () => {},\n\n  commitedMove: undefined,\n  setCommitedMove: () => {},\n\n  isRevealed: false,\n  setIsRevealed: () => {},\n  \n  opponentAccount: undefined,\n  setOpponentAccount: () => {},\n\n  opponentCommited: false,\n  setOpponentCommited: () => {},\n\n  opponentRevealed: false,\n  setOpponentRevealed: () => {},\n\n  gameResult: undefined,\n  setGameResult: () => {}\n};\n\nconst appReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'SET_ETH_BALANCE':\n      return {\n        ...state,\n        ethBalance: payload,\n      };\n    case 'SET_TOKEN_BALANCE':\n      return {\n        ...state,\n        tokenBalance: payload,\n      };\n    case 'SET_TXN_STATUS':\n      return {\n        ...state,\n        txnStatus: payload,\n      };\n    case 'SET_APP_ERROR':\n        return {\n          ...state,\n          appError: payload,\n        };\n    case 'SET_GAME_ID':\n      return {\n        ...state,\n        gameId: payload,\n      };          \n    case 'SET_COMMITED_MOVE':\n      return {\n        ...state,\n        commitedMove: payload,\n      };\n    case 'SET_IS_REVEALED':\n        return {\n          ...state,\n          isRevealed: payload,\n        };\n    case 'SET_OPPONENT_ACCOUNT':\n      return {\n        ...state,\n        opponentAccount: payload,\n      };\n    case 'SET_GAME_RESULT':\n      return {\n        ...state,\n        gameResult: payload,\n      };\n    case 'SET_OPPONENT_REVEALED':\n      return {\n        ...state,\n        opponentRevealed: payload,\n      };\n    case 'SET_OPPONENT_COMMITED':\n      return {\n        ...state,\n        opponentCommited: payload,\n      };\n    \n    default:\n      return state;\n  }\n};\n\nconst AppContext = createContext(initialContext);\nexport const useAppContext = () => React.useContext(AppContext);\nexport const AppContextProvider = ({ children }) => {\n  const [store, dispatch] = useReducer(appReducer, initialContext);\n\n  const contextValue = {\n    ethBalance: store.ethBalance,\n    setEthBalance: (balance) => {\n      dispatch({ type: 'SET_ETH_BALANCE', payload: balance });\n    },\n    tokenBalance: store.tokenBalance,\n    setTokenBalance: (balance) => {\n      dispatch({ type: 'SET_TOKEN_BALANCE', payload: balance });\n    },\n    appError: store.appError,\n    setAppError: (str) => {\n      dispatch({ type: 'SET_APP_ERROR', payload: str });\n    },\n    gameId: store.gameId,\n    setGameId: (gameId) => {\n      dispatch({ type: 'SET_GAME_ID', payload: gameId });\n    },\n    selectedMove: store.selectedMove,\n    setSelectedMove: (selectedMove) => {\n      dispatch({ type: 'SET_SELECTED_MOVE', payload: selectedMove });\n    },\n    commitedMove: store.commitedMove,\n    setCommitedMove: (commitedMove) => {\n      dispatch({ type: 'SET_COMMITED_MOVE', payload: commitedMove });\n    },\n    isRevealed: store.isRevealed,\n    setIsRevealed: (isRevealed) => {\n      dispatch({ type: 'SET_IS_REVEALED', payload: isRevealed });\n    },\n    opponentAccount: store.opponentAccount,\n    setOpponentAccount: (opponentAccount) => {\n      dispatch({ type: 'SET_OPPONENT_ACCOUNT', payload: opponentAccount });\n    },\n    opponentCommited: store.opponentCommited,\n    setOpponentCommited: (opponentCommited) => {\n      dispatch({ type: 'SET_OPPONENT_COMMITED', payload: opponentCommited });\n    },\n    opponentRevealed: store.opponentRevealed,\n    setOpponentRevealed: (opponentRevealed) => {\n      dispatch({ type: 'SET_OPPONENT_REVEALED', payload: opponentRevealed });\n    },\n    gameResult: store.gameResult,\n    setGameResult: (gameResult) => {\n      dispatch({ type: 'SET_GAME_RESULT', payload: gameResult });\n    }\n  };\n\n  return <AppContext.Provider value={contextValue}>{children}</AppContext.Provider>;\n};\n","import { useMemo } from 'react';\nimport {\n  Contract,\n  // ContractInterface\n} from '@ethersproject/contracts';\nimport { AddressZero } from '@ethersproject/constants';\nimport { useWeb3React } from '@web3-react/core';\n\nexport function useContract(contractAddress, ABI) {\n  if (contractAddress === AddressZero) {\n    throw Error(`Invalid 'contractAddress' parameter '${contractAddress}'.`);\n  }\n\n  const { library, account } = useWeb3React();\n\n  const signerOrProvider = account ? library.getSigner(account).connectUnchecked() : library;\n\n  return useMemo(() => {\n    return new Contract(contractAddress, ABI, signerOrProvider);\n  }, [contractAddress, ABI, signerOrProvider]);\n}\n","import { useCallback } from 'react';\nimport { useContract } from './useContract';\nimport RockPaperScissors from '../contracts/RockPaperScissors.json';\nimport { useWeb3React } from '@web3-react/core';\nimport { useAppContext } from '../AppContext';\nimport { BigNumber } from '@ethersproject/bignumber'\nimport web3 from 'web3';\n\nimport { ethers } from 'ethers';\n\nconst emptyMoveEncr = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\nexport const useRockPaperScissorsContract = () => {\n  const { chainId } = useWeb3React();\n  const contractAddress = RockPaperScissors.networks[chainId].address;\n\n  return useContract(contractAddress, RockPaperScissors.abi);\n};\n\nexport const useRockPaperScissors = () => {\n  const { setAppError, setGameId, setCommitedMove, setIsRevealed, setOpponentAccount, setOpponentCommited, setOpponentRevealed, setGameResult } = useAppContext();\n\n  const { account } = useWeb3React();\n  const contract  = useRockPaperScissorsContract();\n\n  const registerNewGame = async () => {\n    try {\n      const result = await contract.register({\n        from: account\n      });\n      const receipt = await result.wait(1);\n      const newGameId = Number(receipt.events[0].args.gameId);\n      setGameId(newGameId);\n      return newGameId;\n    }\n    catch (error) {\n      setAppError(`Error executing register transaction ${error}`)\n    }\n  };\n\n  const commitMove = async (id, move) => {\n    try {\n      const plainMove = `${move}${web3.utils.randomHex(4)}`;\n      const result = await contract.commit(\n        BigNumber.from(Number(id)), web3.utils.soliditySha3(plainMove),\n        {\n          from: account\n        });\n      await result.wait(1);\n      setCommitedMove(plainMove);\n    }\n    catch (error) {\n      setAppError(`Error executing commit move: ${error}`)\n    }\n  };\n\n  const revealMove = async (id, plainMove) => {\n    const result = await contract.reveal(BigNumber.from(Number(id)), plainMove, {from: account});\n    await result.wait(1);\n    setIsRevealed(true);\n  };\n\n  const setGameEventListener = async (id) => {\n    // event PlayerRegistered(address player, uint gameId)\n    contract.on(\"PlayerRegistered\", (eventPlayer, eventGameId) => {\n      if (\n        Number(eventGameId) == Number(id) && \n        eventPlayer !== account) {\n        setOpponentAccount(eventPlayer);\n      }\n    });\n\n    // event MoveCommited(address player, uint gameId);\n    contract.on(\"MoveCommited\", (eventPlayer, eventGameId) => {\n      if (Number(eventGameId) == Number(id) && \n        eventPlayer !== account) {\n        setOpponentCommited(eventPlayer);\n      }\n    })\n\n    // event GameDrawn(uint gameId);\n    contract.on(\"GameDrawn\", (eventGameId) => {\n      if (Number(eventGameId) == Number(id)) {\n        setGameResult(\"Game is drawn\");\n      }\n    })\n\n    // event GamerWinner(address player, uint gameId);\n    contract.on(\"GamerWinner\", (eventPlayer, eventGameId) => {\n      if (Number(eventGameId) == Number(id)) {\n        setGameResult(`Game winner is ${eventPlayer}`);\n      }\n    })\n  };\n\n  const removeListeners = async () => { \n    await contract.removeAllListeners();\n  };\n\n  const readGameState = async (id) => {\n    const gameIdConverted = BigNumber.from(Number(id))\n    const game = await contract.games(gameIdConverted);\n    console.log(\"Game: \", JSON.stringify(game));\n    if (game.finished) {\n      if (game.winner !== ethers.constants.AddressZero) {\n        // we have the winner\n        setGameResult(`Game winner is ${game.winner}`);\n      }\n      else {\n        // game is drawn\n        setGameResult(\"Game is drawn\");\n      }\n    }\n\n    const opponentMove = await contract. getOpponentMove(gameIdConverted);\n    console.log(\"Opponent: \", JSON.stringify(opponentMove));\n    if (opponentMove.registered) {\n      \n      if (opponentMove.encrMove != emptyMoveEncr) {\n        setOpponentCommited(true);\n      }\n    \n      if (opponentMove.move != 0) {\n        setOpponentRevealed(true);\n      }\n    }\n\n    const players = await contract.getPlayers(gameIdConverted);\n    console.log(\"Players: \", JSON.stringify(players));\n    if (players) {\n      const opponent = players.find(x => x !== account);\n      if (opponent) {\n        setOpponentAccount(opponent);\n      }\n    } \n  };\n\n  const resetGameContext = () => {\n    setGameId(undefined);\n    setCommitedMove(undefined);\n    setIsRevealed(false);\n    setOpponentAccount(undefined);\n    setOpponentCommited(false);\n    setOpponentRevealed(false);\n    setGameResult(undefined);\n    removeListeners();\n  }\n\n  return {\n    registerNewGame,\n    commitMove,\n    revealMove,\n    setGameEventListener,\n    readGameState,\n    removeListeners,\n    resetGameContext\n  }\n};\n","export const shortenAddress = (address, num = 3) => {\n  if (!address) return '';\n  return !!address && `${address.substring(0, num + 2)}...${address.substring(address.length - num - 1)}`;\n};\n","\n\nimport React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useAppContext } from '../AppContext';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { useRockPaperScissors } from '../hooks/useRockPaperScissors';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { shortenAddress } from '../utils/shortenAddress'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 350\n  },\n  button: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  }\n}));\n\nconst GameCard = () => {\n  const [move, setMove] = React.useState('1');\n  const handleChange = (event) => {\n    setMove(event.target.value);\n  };\n\n  const classes = useStyles();\n  const { active, account } = useWeb3React();\n  const { \n    gameId, \n    commitedMove, \n    isRevealed, \n    opponentCommited, \n    opponentAccount,\n    opponentRevealed, \n    gameResult \n  } = useAppContext();\n  const { \n    registerNewGame, \n    resetGameContext, \n    commitMove, \n    readGameState, \n    revealMove, \n    setGameEventListener, \n    removeListeners \n  } = useRockPaperScissors()\n\n  const commit = async () => {\n    await commitMove(gameId, move);\n  }\n\n  const reveal = async () => {\n    await revealMove(gameId, commitedMove);\n  }\n\n  const registerGame = async () => {\n    resetGameContext();\n    const id = await registerNewGame();\n    if (id) {\n      await readGameState(id);\n      await removeListeners();\n      await setGameEventListener(id);\n    }\n  }\n\n  if (active && account) {\n    return (\n      <div>\n        <Card className={classes.root}>\n          <CardActionArea>\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Game ID: {gameId}\n              </Typography>\n            </CardContent>\n            <CardContent>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Choose move</FormLabel>\n                <RadioGroup aria-label=\"moveChoice\" name=\"moveChoice\" value={move} onChange={handleChange}>\n                  <FormControlLabel disabled={!gameId || !!commitedMove} value=\"1\" control={<Radio />} label=\"Rock\" />\n                  <FormControlLabel disabled={!gameId || !!commitedMove} value=\"2\" control={<Radio />} label=\"Papper\" />\n                  <FormControlLabel disabled={!gameId || !!commitedMove} value=\"3\" control={<Radio />} label=\"Scissors\" />\n                </RadioGroup>\n              </FormControl>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button color=\"inherit\" disabled={!gameId || !!commitedMove} onClick={commit}>Commit</Button>\n            <Button color=\"inherit\" disabled={!gameId || isRevealed || !commitedMove || !opponentCommited} onClick={reveal}>Reveal</Button>\n          </CardActions>\n        </Card>\n\n        <Card className={classes.root}>\n          <CardActionArea>\n            <CardContent>\n              {gameResult && <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  Result: {gameResult}\n              </Typography> }\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Opponent\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                Account: {shortenAddress(opponentAccount)}\n              </Typography>\n              {opponentCommited && \n                <Typography variant=\"body2\" component=\"p\">\n                Opponent commited move\n                </Typography> \n              }\n              {\n                opponentRevealed && \n                <Typography variant=\"body2\" component=\"p\">\n                Opponent revealed move\n                </Typography>\n              }              \n            </CardContent>\n          </CardActionArea>\n        </Card>\n        <div className={classes.button}>\n          <Button variant=\"contained\" color=\"secondary\" onClick={registerGame}>New Game</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameCard;","import React from 'react';\n\nimport { useWeb3React } from '@web3-react/core';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport GameCard from '../../components/GameCard';\n\nconst Home = () => {\n  const { active } = useWeb3React();\n  //// add select, start game, commit, reveal;\n  //// add \n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        {\n          !active && \n          <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }}>\n            Not connected to the account\n          </Typography>\n        }\n        {active && <GameCard />}\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import { InjectedConnector } from '@web3-react/injected-connector';\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 3, 1337] });\n","\nimport React, { useEffect} from 'react';\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nimport { shortenAddress } from '../utils/shortenAddress'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { injected } from \"../connectors\";\nimport { useAppContext } from '../AppContext';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 250,\n    maxHeight: 100\n  }\n});\n\nconst ConnectButton = () => {\n  const classes = useStyles();\n  const { activate, active, account, deactivate } = useWeb3React();\n  const { setAppError } = useAppContext();\n\n  useEffect(() => {\n    if (!window.ethereum) {\n      setAppError(\"please install Metamask to use this app.\");\n      return;\n    }\n  }, []);\n\n  if (active) {\n    return (\n      <div className={classes.root}>\n        <Typography variant=\"body2\" component=\"p\">\n            Account: {shortenAddress(account)}\n        </Typography>\n        <Button color=\"inherit\" onClick={() => deactivate()}>Disconnect</Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Button color=\"inherit\" onClick={() => { \n        if (!window.ethereum) {\n          setAppError(\"please install Metamask to use this app.\");\n          return;\n        }\n        activate(injected, (e) => {\n          if (e instanceof UnsupportedChainIdError) {\n            setAppError('Unsupported network selected.');\n          }\n        })\n      }}>Connect</Button>\n    </div>\n  );\n\n};\n\nexport default ConnectButton;","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useAppContext } from '../AppContext';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function AlertErrorBar() {\n  const { appError, setAppError } = useAppContext();\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setAppError('');\n  };\n\n  return (\n    <Snackbar open={!!appError} autoHideDuration={6000} onClose={handleClose}>\n      <Alert onClose={handleClose} severity=\"error\">\n        {appError}\n      </Alert>\n    </Snackbar>\n  )\n};\n","import { useWeb3React } from '@web3-react/core';\nimport { formatEther } from '@ethersproject/units';\nimport { useAppContext } from '../AppContext';\n\nconst useEth = () => {\n  const { active, library, account } = useWeb3React();\n  const { ethBalance, setEthBalance } = useAppContext();\n\n  const fetchEthBalance = async () => {\n    if (library && active && account) {\n      const balance = await library.getBalance(account);\n\n      // better to do safe math operations\n      setEthBalance(parseFloat(formatEther(balance)).toPrecision(4));\n    } else {\n      setEthBalance('--');\n    }\n  };\n  return { ethBalance, fetchEthBalance };\n};\n\nexport default useEth;\n","import React, { useEffect } from 'react';\nimport { useWeb3React  } from '@web3-react/core';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useEth from '../hooks/useEth';\nimport { useGameToken } from '../hooks/useGameToken'\nimport { useAppContext } from '../AppContext';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 250,\n    maxHeight: 100\n  }\n});\n\n\nconst TokenBalance = () => {\n  const { setTokenBalance, gameResult } = useAppContext();\n  const { account, chainId, active } = useWeb3React();\n  \n  const { fetchTokenBalance, tokenBalance } = useGameToken();\n\n  useEffect(() => {\n    if (account && active) {\n      fetchTokenBalance();\n    } else {\n      setTokenBalance(\"--\");\n    }\n  }, [account, active, chainId, gameResult]);\n\n  return (\n    <Typography variant=\"body2\" component=\"p\">\n      JSD ballance: {tokenBalance}\n    </Typography>\n  )\n}\n\n\nconst BallanceCard = () => {\n  const classes = useStyles();\n  const { account, chainId, active } = useWeb3React();\n  const { fetchEthBalance, ethBalance } = useEth();\n  const { setEthBalance } = useAppContext();\n\n  useEffect(() => {\n    if (account && active) {\n      fetchEthBalance();\n    } else {\n      setEthBalance(\"--\");\n    }\n  }, [account]);\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"body2\" component=\"p\">\n        ETH ballance: {ethBalance}\n      </Typography>\n      { \n        !(active && chainId) && <Typography variant=\"body2\" component=\"p\">\n          JSD ballance: -- \n        </Typography>\n      }\n      {active && chainId && <TokenBalance /> }\n    </div>\n  );\n}\n\nexport default BallanceCard;","import { useContract } from './useContract';\nimport GameToken from '../contracts/GameToken.json';\nimport { useWeb3React } from '@web3-react/core';\nimport { useAppContext } from '../AppContext';\nimport { formatUnits } from '@ethersproject/units';\n\nexport const useGameToken = () => {\n  const { account, chainId } = useWeb3React();\n  const tokenContractAddress = GameToken.networks[chainId].address;\n  const tokenContract = useContract(tokenContractAddress, GameToken.abi);\n    \n  const { setTokenBalance, tokenBalance } = useAppContext();\n\n  const fetchTokenBalance = async () => {\n    try {\n      const tokenBalance = await tokenContract.balanceOf(account);\n      setTokenBalance(formatUnits(tokenBalance, 8));\n    } catch (error) {\n      const tokenBalance = \"--\";\n      setTokenBalance(tokenBalance);\n    }\n  };\n\n  return {\n    tokenBalance,\n    fetchTokenBalance\n  };\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport ConnectButton from './ConnectButton';\nimport AlertErrorBar from './AlertErrorBar';\nimport BallanceCard from './BallanceCard';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n     <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <AlertErrorBar />\n            <BallanceCard />\n            <Typography variant=\"h6\" className={classes.title}>\n              Rock Paper Scissors\n            </Typography>\n            <ConnectButton />\n          </Toolbar>\n        </AppBar >\n     </div>\n  );\n};\n\nexport default Header;\n","import React from 'react'\nimport { Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport { ethers } from 'ethers';\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { AppContextProvider } from './AppContext';\nimport Home from './pages/Home';\nimport Header from './components/Header';\n\nfunction getLibrary(provider) {\n  return new ethers.providers.Web3Provider(provider);\n}\n\nexport default function App () {\n  return (\n    <div className=\"App\">\n      <AppContextProvider>\n        <Web3ReactProvider getLibrary={getLibrary}>\n          <div>\n          <Header />\n          <Route path=\"/\" component={Home} />\n          </div>\n        </Web3ReactProvider>\n      </AppContextProvider>\n    </div>\n  )\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nexport const Client = () => {\n  return (\n    <BrowserRouter>\n          <App />\n\n    </BrowserRouter>\n  );\n};\n\nReactDOM.render(<Client />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}